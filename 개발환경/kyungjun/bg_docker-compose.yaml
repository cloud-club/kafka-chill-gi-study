services:
  akhq:
    image: tchiotludo/akhq
    restart: unless-stopped
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server-1:
              properties:
                bootstrap.servers: "kafka-1:9092"
            docker-kafka-server-2:
              properties:
                bootstrap.servers: "kafka-2:9092"
            docker-kafka-server-3:
              properties:
                bootstrap.servers: "kafka-3:9092"
    ports:
      - "8080:8080"
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
      - kafka-1
      - kafka-2
      - kafka-3
      - schema-registry

  zookeeper-1:
    image: confluentinc/cp-zookeeper:7.4.9
    volumes:
      - ./zookeeper-data-1:/var/lib/zookeeper/data
      - ./zookeeper-log-1:/var/lib/zookeeper/log
      - ./zookeeper-etc-1:/etc/zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888
    ports:
      - "22181:2181"
      - "22888:2888"
      - "23888:3888"

  zookeeper-2:
    image: confluentinc/cp-zookeeper:7.4.9
    volumes:
      - ./zookeeper-data-2:/var/lib/zookeeper/data
      - ./zookeeper-log-2:/var/lib/zookeeper/log
      - ./zookeeper-etc-2:/etc/zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888
    ports:
      - "32181:2181"
      - "32888:2888"
      - "33888:3888"

  zookeeper-3:
    image: confluentinc/cp-zookeeper:7.8.0
    volumes:
      - ./zookeeper-data-3:/var/lib/zookeeper/data
      - ./zookeeper-log-3:/var/lib/zookeeper/log
      - ./zookeeper-etc-3:/etc/zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888
    ports:
      - "42181:2181"
      - "42888:2888"
      - "43888:3888"

  kafka-1:
    image: confluentinc/cp-kafka:7.8.0
#    depends_on:
#      zookeeper-1:
#        condition: service_healthy
#      zookeeper-2:
#        condition: service_healthy
#      zookeeper-3:
#        condition: service_healthy
    volumes:
      - ./kafka-data-3:/var/lib/kafka/data
      - ./kafka-secrets-3:/etc/kafka/secrets
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CLUSTER_ID: "hUr2P_0YSpifjblOiEa8pA"
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka-2:
    image: confluentinc/cp-kafka:7.8.0
#    depends_on:
#      zookeeper-1:
#        condition: service_healthy
#      zookeeper-2:
#        condition: service_healthy
#      zookeeper-3:
#        condition: service_healthy
    volumes:
      - ./kafka-data-3:/var/lib/kafka/data
      - ./kafka-secrets-3:/etc/kafka/secrets
    ports:
      - "39092:39092"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9092,PLAINTEXT_HOST://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CLUSTER_ID: "hUr2P_0YSpifjblOiEa8pA"
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka-3:
    image: confluentinc/cp-kafka:7.8.0
#    depends_on:
#      zookeeper-1:
#        condition: service_healthy
#      zookeeper-2:
#        condition: service_healthy
#      zookeeper-3:
#        condition: service_healthy
    volumes:
      - ./kafka-data-3:/var/lib/kafka/data
      - ./kafka-secrets-3:/etc/kafka/secrets
    ports:
      - "49092:49092"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9092,PLAINTEXT_HOST://localhost:49092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CLUSTER_ID: "hUr2P_0YSpifjblOiEa8pA"
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  #  schema-registry:
#    image: confluentinc/cp-schema-registry:7.0.5
#    restart: unless-stopped
#    volumes:
#      - ./schema-registry:/etc/schema-registry/secrets
#    ports:
#      - "8085:8085"
#    environment:
#      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka-1:9092,PLAINTEXT://kafka-2:9092,PLAINTEXT://kafka-3:9092"
#      SCHEMA_REGISTRY_HOST_NAME: "schema-registry"
#      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8085"
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8085"]
#      interval: 10s
#      timeout: 5s
#      retries: 5

#  schema-registry:
#    image: confluentinc/cp-schema-registry:7.9.0
#    hostname: schema-registry
#    container_name: schema-registry
#    depends_on:
#      - kafka-1
#      - kafka-2
#      - kafka-3
#    volumes:
#      - ./schema-registry:/etc/schema-registry
#    ports:
#      - "8081:8081"
#    environment:
#      SCHEMA_REGISTRY_HOST_NAME: schema-registry
#      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
#      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
#      SCHEMA_REGISTRY_KAFKASTORE_CLUSTER_ID: "hUr2P_0YSpifjblOiEa8pA"  # 클러스터 ID 명시
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8081"]
#      interval: 10s
#      timeout: 5s
#      retries: 5



#volumes:
#  zookeeper-data-1: {}
#  zookeeper-log-1: {}
#  zookeeper-secrets-1: {}
#  kafka-data-1: {}
#  kafka-secrets-1: {}
#  zookeeper-data-2: {}
#  zookeeper-log-2: {}
#  zookeeper-secrets-2: {}
#  kafka-data-2: {}
#  kafka-secrets-2: {}
#  zookeeper-data-3: {}
#  zookeeper-log-3: {}
#  zookeeper-secrets-3: {}
#  kafka-data-3: {}
#  kafka-secrets-3: {}
#  schema-registry: {}

